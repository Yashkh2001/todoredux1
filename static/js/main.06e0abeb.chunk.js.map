{"version":3,"sources":["redux/actions.js","components/TodoInput.jsx","components/TodoItem.jsx","components/TodoList.jsx","App.js","reportWebVitals.js","redux/states.js","redux/store.js","redux/reducers.js","index.js"],"names":["ADD_TODO","DELETE_TODO","UPDATE_TODO","TodoInput","useState","name","setName","dispatch","useDispatch","className","value","onChange","e","target","type","onClick","todo","id","uuid","payload","TodoItem","editable","setEditable","length","updateTodo","todoId","TodoList","todos","useSelector","state","map","App","style","backgroundColor","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","newTodos","action","push","filter","index","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06e0abeb.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\";\nexport const DELETE_TODO = \"DELETE_TODO\";\nexport const UPDATE_TODO = \"UPDATE_TODO\";\n\nexport function addTodo(todo) {\n    return {\n        type:ADD_TODO,\n        payload: todo,\n    }\n}\n\nexport function deleteTodo(todoId) {\n    return {\n        type:DELETE_TODO,\n        payload: todoId,\n    }\n}\n\n\nexport function updateTodo(todo) {\n    return {\n        type:UPDATE_TODO,\n        payload: todo,\n    }\n}","import React, { useState } from 'react';\nimport { addTodo } from '../redux/actions';\nimport {v1 as uuid} from 'uuid';\nimport { useDispatch } from 'react-redux';\n\nfunction TodoInput() {\n    let [name, setName] = useState();\n    let dispatch = useDispatch();\n    return (\n        \n            <div className=\"input m-2\">\n                <input className=\"inputs\"\n                \n                value={name}\n                onChange={(e)=>setName(e.target.value)}\n                type=\"text\" className=\"col form-control\"/>\n                <button\n                \n                onClick={()=>{\n                       dispatch(  addTodo({\n                        id: uuid(),\n                        name: name\n                    }));\n                        setName('');\n                    }}\n                className=\"btn btn-primary btns \">Add</button>\n            </div>\n        \n    )\n}\n\nexport default TodoInput\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { deleteTodo, updateTodo } from '../redux/actions';\n\nfunction TodoItem({ todo }) {\n    const [editable, setEditable] = useState(false)\n    const [name, setName] = useState(todo.name)\n    let dispatch = useDispatch();\n\n    return (\n        \n            <div className=\"items mx-2 align-items-center\">\n                <div>#{todo.id.length > 1 ? todo.id[2] : todo.id}</div>\n                <div className=\"col\">\n                    {editable ?\n                        <input type=\"text\" className=\"form-control\"\n                            value={name}\n                            onChange={(e) => {\n                                setName(e.target.value);\n                            }}\n\n                        />\n                        :\n                        <h4>{todo.name}</h4>}\n                </div>\n                <div className=\"row buttons\">\n                <button className=\"btn btn-warning m-2\"\n                    onClick={() => {\n                        dispatch(updateTodo({\n                            ...todo,\n                            name: name\n                        }))\n                        if(editable) {\n                         setName(todo.name);   \n                        }\n                        setEditable(!editable);\n                      \n\n                    }}\n                >{editable?\"Update\":\"Edit\"}</button>\n                <button className=\"btn btn-outline-danger m-2 del\"\n                    onClick={() => dispatch(deleteTodo(todo.id))}\n                >Delete</button>\n                </div>\n            </div>\n        \n    )\n}\n\nexport default TodoItem\n","import React from 'react'\nimport TodoItem from './TodoItem'\nimport { useSelector } from 'react-redux'\n\nfunction TodoList() {\n    let todos = useSelector(state=>state);\n\n    return (\n        <div className=\"my-4\">\n            {todos.map((todo)=>   {\n                return <TodoItem key={todos.id} todo={todo}/>;\n            })}\n        </div>\n    )\n}\n\nexport default TodoList\n","import './App.css';\nimport TodoInput from './components/TodoInput';\nimport TodoList from './components/TodoList';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction App() {\n  return (\n    <div className=\"App \" style={{ backgroundColor: \"#3d3f42\",color:\"white\" }}>\n      <TodoInput/>\n      <TodoList/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export let todos = [\n    {\n        id:1,\n        name: \"One\",\n    },\n    {\n        id:2,\n        name: \"Two\",\n    },\n    {\n        id:3,\n        name: \"Three\",\n    },\n]","import {createStore} from 'redux';\nimport {reducer} from './reducers';\n\nexport let store = createStore(reducer);","import { ADD_TODO, UPDATE_TODO, DELETE_TODO } from './actions';\nimport { todos } from './states';\n\n\nexport let reducer = (state = todos, action) => {\n    let newTodos;\n    switch (action.type) {\n        case ADD_TODO:\n            newTodos = [...state];\n            newTodos.push(action.payload);\n            return newTodos;\n        case DELETE_TODO:\n            newTodos = [...state];\n            newTodos = newTodos.filter(todo => todo.id != action.payload);\n            return newTodos;\n        case UPDATE_TODO:\n            newTodos = [...state];\n            let index = -1;\n            for (let i = 0; i < newTodos.length; i++) {\n                index++;\n                if (newTodos[i].id == action.payload.id) {\n                    break;\n                }\n\n            }\n            if (index != -1) {\n                newTodos[index] = action.payload;\n                return newTodos;\n            }\n\n    }\n    return state;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}